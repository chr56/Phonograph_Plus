apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

String getGitHash(int type) {
    def stdout = new ByteArrayOutputStream()
    if (type == 1) exec {
        commandLine 'git', 'rev-parse', 'HEAD'
        standardOutput = stdout
    } else exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

Boolean signing_file_exist = rootProject.file("signing.properties").exists()
def signingProperties = new Properties()
if (signing_file_exist) {
    signingProperties.load(new FileInputStream(rootProject.file("signing.properties")))
}

android {
    compileSdkVersion 31
    buildToolsVersion '31.0.0'
    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 31

        renderscriptTargetApi 29
        vectorDrawables.useSupportLibrary = true

        applicationId 'player.phonograph'
        versionCode 9
        versionName '0.0.8'
        buildConfigField "String", "GIT_COMMIT_HASH", String.join('', '\"', getGitHash(1), '\"')
    }
    signingConfigs {
        release {
            if (signing_file_exist) {
                storeFile file(signingProperties['storeFile'])
                storePassword signingProperties['storePassword']
                keyAlias signingProperties['keyAlias']
                keyPassword signingProperties['keyPassword']
            }
        }
    }
    applicationVariants.all { variant ->
        if (variant.name == "release") {
            variant.outputs.all {
                outputFileName = "PhonographPlus_${variant.versionName}.apk"
            }
        } else {
            variant.outputs.all {
                outputFileName = "${variant.name}_${variant.versionName}_${new Date().format("MMdd_HHmm")}.apk"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            if (signing_file_exist) signingConfig signingConfigs.release
            applicationIdSuffix '.plus'
            resValue "string", "app_name", "Phonograph Plus"
        }
        debug {
            if (signing_file_exist) signingConfig signingConfigs.release

            applicationIdSuffix '.plus.debug'
            resValue "string", "app_name", "Phonograph Plus Debug"
        }
        preview {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            if (signing_file_exist) signingConfig signingConfigs.release

            resValue "string", "app_name", "Phonograph Plus Preview"
            applicationIdSuffix '.plus.preview'
            versionNameSuffix "(Preview)"
            matchingFallbacks = ['release']
            debuggable true
        }
        checkout {
            // for checkout
            if (signing_file_exist) signingConfig signingConfigs.release

            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            resValue "string", "app_name", "Phonograph Plus Checkout"
            applicationIdSuffix '.plus.checkout'
            matchingFallbacks = ['release']
            debuggable true
        }
        // for ci
        ci {

            applicationIdSuffix '.plus.ci'
            resValue "string", "app_name", "Phonograph Plus CI Build"
            matchingFallbacks = ['release']
            debuggable true
        }
    }
    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }
    lintOptions {
        disable 'MissingTranslation'
        disable 'InvalidPackage'
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding true
    }
//
//    gradle.projectsEvaluated {
//        tasks.withType(JavaCompile) {
//            options.compilerArgs << "-Xlint:deprecation" << "-Xlint:unchecked"
//        }
//    }

}

dependencies {
    implementation project(path: ':MDthemer')

    implementation 'androidx.annotation:annotation:1.3.0'
    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.fragment:fragment-ktx:1.4.0'
    implementation 'androidx.media:media:1.4.3'
    implementation 'androidx.palette:palette-ktx:1.0.0'
    implementation 'androidx.percentlayout:percentlayout:1.0.0'
    implementation 'androidx.preference:preference-ktx:1.1.1'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'com.google.android.material:material:1.4.0'

    def room_version = "2.4.0"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
//    ksp "androidx.room:room-compiler:$room_version"

    implementation 'com.github.kabouzeid:RecyclerView-FastScroll:1.0.16-kmod'
    implementation 'com.github.kabouzeid:SeekArc:1.2-kmod'
    implementation 'com.github.kabouzeid:AndroidSlidingUpPanel:6'
    implementation 'com.afollestad.material-dialogs:core:3.3.0'
    implementation 'com.afollestad.material-dialogs:input:3.3.0'
    implementation 'com.afollestad.material-dialogs:color:3.3.0'
    implementation 'com.afollestad.material-dialogs:files:3.3.0'


    implementation 'com.afollestad:material-cab:0.1.12'
    implementation 'com.github.ksoichiro:android-observablescrollview:1.6.0'
    implementation 'com.heinrichreimersoftware:material-intro:2.0.0'
    implementation 'com.h6ah4i.android.widget.advrecyclerview:advrecyclerview:1.0.0'


    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'com.google.code.gson:gson:2.8.6'

    implementation 'de.psdev.licensesdialog:licensesdialog:2.1.0'

    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'
    implementation 'com.github.bumptech.glide:okhttp3-integration:4.12.0'
    implementation 'org.eclipse.mylyn.github:org.eclipse.egit.github.core:2.1.5'

    implementation 'com.github.AdrienPoupa:jaudiotagger:2.2.3'

}
repositories {
    mavenCentral()
}
